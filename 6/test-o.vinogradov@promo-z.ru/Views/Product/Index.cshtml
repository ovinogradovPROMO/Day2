@using AdvantShop.Orders
@model AdvantShop.ViewModel.ProductDetails.ProductDetailsViewModel
@{
    var product = Model.Product;
    var offer = Model.Offer;
    var currentZone = AdvantShop.Repository.IpZoneContext.CurrentZone;
}

@Html.RenderModules("product_page_before", new { product, offer, Model.FinalPrice, Model.FinalDiscount })
<div data-ng-init="product.loadData(@product.ProductId, @(Model.ColorId != null ?  Model.ColorId.ToString() : "null"), @(Model.SizeId != null ? Model.SizeId.ToString() : "null"), @Model.HidePrice.ToLowerString())"></div>
<div class="col-p-v" @(Model.Product.Adult ? String.Empty : "itemscope itemtype=https://schema.org/Product")>
    <div class="page-title-row details-title-row">
		<h1 class="details-title page-title" @(Model.Product.Adult ? String.Empty : "itemprop=name") data-ng-init="product.productName='@Html.AttributeEncode(Html.GetPageH1())'" @Html.InplaceMeta(product.ProductId, AdvantShop.SEO.MetaType.Product)>@Html.GetPageH1()</h1>
    </div>
    @if (product.CategoryId==5660)
    {
    @Html.StaticBlock("fortest")
    }
    @Html.Action("BreadCrumbs", "Common", new { breadCrumbs = Model.BreadCrumbs })
    <div class="row">
        <div class="col-xs-12 details-block">
            <div class="row">
            <div class="col-xs-5">
            @Html.StaticBlock("catalog")
            </div>
                <div class="col-xs-5">
                
                    @Html.Action("ProductPhotos", new { productModel = Model, enabledModalPreview = true })
                </div>
                <div class="col-xs">
                    @Html.Partial("ProductInfo", Model)
                    @Html.Action("GetSTR", "custom", new { id = 10 })
                    <!---->
                    <aside class="details-aside">
                        @Html.StaticBlock("bannerDetails")


                    </aside>
                    <!---->
                </div>
                @if (product.Brand != null && product.Brand.Enabled && product.Brand.BrandLogo != null && product.Brand.BrandLogo.PhotoName.IsNotEmpty())
                {
                <div class="col-xs-2">
                    <figure class="details-brand">
                        <a href="@Url.RouteUrl("Brand", new { url = product.Brand.UrlPath })" class="details-brand-link">
                            <img class="details-brand-link" src="@product.Brand.BrandLogo.ImageSrc()" alt="@Html.Encode(product.Brand.Name)" />
                        </a>
                    </figure>
                </div>
                }
            </div>
            <div>

                @Html.RenderModules("product_middle", new { product, offer })
                @Html.Action("ProductTabs", Model)
            </div>
            <div class="details-row">
                @Html.Action("RelatedProducts", new { Model.Product, type = "Related" })
            </div>
            <div class="details-row">
                @Html.Action("RelatedProducts", new { Product = product, type = "Alternative" })
            </div>
        </div>
    </div>

</div>
</div>
 @Html.StaticBlock("fortest")